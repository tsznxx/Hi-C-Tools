/*****************************************************************************
  columnReader.h
  Last-modified: 24 Feb 2012 04:53:03 PM

  (c) 2012 - Yunfei Wang
  Center for Systems Biology
  Department of Molecular & Cell Biology
  University of Texas at Dallas
  tszn1984@gmail.com

  Licensed under the GNU General Public License 2.0 license.
******************************************************************************/

#ifndef COLUMNREADER_H
#define COLUMNREADER_H

#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <cstring>
#include <cstdlib>
#include "gzstream.h"
#include "reader.h"
#include "stringUtils.h"

using namespace std;

// Line status defination for ColumnReader
enum LineStatus
{
    LINE_INVALID=-1,
    LINE_HEADER=0,
    LINE_BLANK=1,
    LINE_VALID=2
};

typedef vector<string> LINE_ELEMS;

///////////////////////////////////////
// ColumnReader Class
///////////////////////////////////////

class ColumnReader: public Reader
{
public:
    // Constructor
    ColumnReader(const string &fname, const string delimiter = "\t");
    
    // Destructor
    ~ColumnReader();
    
    // Get the next line
    LineStatus GetNext(LINE_ELEMS &elems);

    // Print header
    void PrintHeader(void);

private:
    // Data
    int _colNum;
    string _delimiter;
    LINE_ELEMS _header;

    // Methods
    inline 
    LineStatus getLine(LINE_ELEMS &elems)
    {
        if (_inStream->good()==true)
        {
            elems.reserve(_colNum);
            string line;

            getline(*_inStream,line);
            if (line.find_first_of("#")==0)
            {
                _header.push_back(line);
                return LINE_HEADER;
            }
            else
            {
                Tokenize(line,elems,_delimiter);
                if (elems.size()==0)
                    return LINE_BLANK;
                _num++;
                _colNum=elems.size();
                return LINE_VALID;
            }
        }
        return LINE_INVALID;
    };
};

#endif //COLUMNREADER_H

